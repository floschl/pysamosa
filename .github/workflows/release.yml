name: Build distribution
on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
#on: [push, pull_request]

jobs:
  publish-pypi:
    runs-on: "ubuntu-latest"
    environment:
      name: pypi
      url: https://pypi.org/p/pysamosa
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install build dependencies
        run: python -m pip install build wheel

      - name: Build extensions
        run: python setup.py build_ext --inplace

      - name: Build distributions
        shell: bash -l {0}
        run: python setup.py sdist bdist_wheel

      - name: Publish package to PyPI
        if: github.repository == 'floschl/pysamosa' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

      - name: Release
        if: github.repository == 'floschl/pysamosa' && github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
#          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
#  publish-releases:
#    name: Create Release
#    runs-on: "ubuntu-latest"
#    steps:
#      â€“ name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Release
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: false
#          release_name: ${{ steps.version.outputs.version }}
#          tag_name: ${{ github.ref }}
#          body_path: CHANGELOG.md
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
